{"version":3,"sources":["api/api.ts","components/PostsList/PostsList.tsx","api/posts.ts","api/comments.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","App.tsx","index.tsx"],"names":["BASE_URL","PostsList","userId","setSelectDetId","selectDetId","useState","userPosts","setUserPosts","useEffect","fetch","then","response","json","getUserPosts","className","map","post","title","type","onClick","id","getPostComments","postId","a","responst","addComment","obj","method","body","JSON","stringify","headers","NewCommentForm","setComments","name","setName","email","setEmail","comment","setComment","formSubmit","event","preventDefault","newComment","result","onSubmit","placeholder","value","onChange","target","PostDetails","postDetails","setPostDetails","comments","visible","setVisible","getPostDetails","delComment","commentId","newComments","length","App","selectUser","setSelectUser","users","setUsers","user","ReactDOM","render","document","getElementById"],"mappings":"8RAAaA,G,YAAW,qC,iBCWXC,EACT,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,OAAQC,EAAkC,EAAlCA,eAAgBC,EAAkB,EAAlBA,YAC3B,EAAkCC,qBAAlC,mBAAOC,EAAP,KAAkBC,EAAlB,KAOA,OALAC,qBAAU,YCbP,SAAsBN,GAC3B,OAAOO,MAAMP,EAAM,UAAMF,EAAN,yBAA+BE,GAA/B,UAA6CF,EAA7C,WAChBU,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WDYzBC,CAAaX,GACVQ,MAAK,SAAAC,GAAQ,OAAIJ,EAAaI,QAChC,CAACT,IAGF,sBAAKY,UAAU,YAAf,UACE,wCAEA,oBAAIA,UAAU,kBAAkB,UAAQ,cAAxC,gBACGR,QADH,IACGA,OADH,EACGA,EAAWS,KAAI,SAAAC,GAAI,OAClB,qBACEF,UAAU,kBADZ,UAIE,gCACE,6CACaE,EAAKd,OADlB,QAGCc,EAAKC,SAGR,wBACEC,KAAK,SACLJ,UAAU,2BACVK,QAAS,WACPf,IAAgBY,EAAKI,GACjBjB,EAAe,GACfA,EAAea,EAAKI,KAN5B,SASIhB,IAAgBY,EAAKI,GAAK,QAAU,WAlBnCJ,EAAKI,a,uBE1BXC,EAAe,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACNd,MAAM,GAAD,OAAIT,EAAJ,4BAAgCsB,IAD/B,cACvBE,EADuB,yBAGtBA,EAASZ,QAHa,2CAAH,sDAUrB,IAAMa,EAAU,uCAAG,WAAOC,GAAP,SAAAH,EAAA,sEAClBd,MAAM,GAAD,OAAIT,EAAJ,aACT,CACE2B,OAAQ,OACRC,KAAMC,KAAKC,UAAUJ,GACrBK,QAAS,CAAE,eAAgB,qCALP,2CAAH,sDCHVC,G,MACT,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,YAAaX,EAAa,EAAbA,OAChB,EAAwBjB,mBAAS,IAAjC,mBAAO6B,EAAP,KAAaC,EAAb,KACA,EAA0B9B,mBAAS,IAAnC,mBAAO+B,EAAP,KAAcC,EAAd,KACA,EAA8BhC,mBAAS,IAAvC,mBAAOiC,EAAP,KAAgBC,EAAhB,KAQMC,EAAU,uCAAG,WAAOC,GAAP,iBAAAlB,EAAA,6DACjBkB,EAAMC,iBAEAC,EAAwB,CAC5BT,OACAE,QACAR,KAAMU,EACNhB,UAPe,SAUXG,EAAWkB,GAVA,uBAWItB,EAAgBC,GAXpB,OAWXsB,EAXW,OAajBX,EAAYW,GAlBZT,EAAQ,IACRE,EAAS,IACTE,EAAW,IAGM,2CAAH,sDAkBhB,OACE,uBACEzB,UAAU,iBACV+B,SAAUL,EAFZ,UAIE,qBAAK1B,UAAU,aAAf,SACE,uBACEI,KAAK,OACLgB,KAAK,OACLY,YAAY,YACZhC,UAAU,wBACViC,MAAOb,EACPc,SAAU,SAACP,GACTN,EAAQM,EAAMQ,OAAOF,YAK3B,qBAAKjC,UAAU,aAAf,SACE,uBACEI,KAAK,OACLgB,KAAK,QACLY,YAAY,aACZhC,UAAU,wBACViC,MAAOX,EACPY,SAAU,SAACP,GACTJ,EAASI,EAAMQ,OAAOF,YAK5B,qBAAKjC,UAAU,aAAf,SACE,0BACEoB,KAAK,OACLY,YAAY,oBACZhC,UAAU,wBACViC,MAAOT,EACPU,SAAU,SAACP,GACTF,EAAWE,EAAMQ,OAAOF,YAK9B,wBACE7B,KAAK,SACLJ,UAAU,uCAFZ,gCCvEKoC,G,MAA+B,SAAC,GAAgB,IAAd5B,EAAa,EAAbA,OAC7C,EAAsCjB,qBAAtC,mBAAO8C,EAAP,KAAoBC,EAApB,KACA,EAAgC/C,mBAAoB,IAApD,mBAAOgD,EAAP,KAAiBpB,EAAjB,KACA,EAA8B5B,oBAAS,GAAvC,mBAAOiD,EAAP,KAAgBC,EAAhB,KAEA/C,qBAAU,YHTL,SAAwBc,GAC7B,OAAOb,MAAM,GAAD,OAAIT,EAAJ,kBAAsBsB,IAC/BZ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WGQ3B4C,CAAelC,GACZZ,MAAK,SAAAC,GAAQ,OAAIyC,EAAezC,MAEnCU,EAAgBC,GACbZ,MAAK,SAAAC,GAAQ,OAAIsB,EAAYtB,QAC/B,CAACW,IAEJ,IAAMmC,EAAU,uCAAG,WAAOrC,GAAP,eAAAG,EAAA,sEFhBSmC,EEiBNtC,EFhBfX,MAAM,GAAD,OAAIT,EAAJ,qBAAyB0D,GAAa,CAAE/B,OAAQ,WEezC,uBAESN,EAAgBC,GAFzB,OAEXqC,EAFW,OAIjB1B,EAAY0B,GAJK,iCFhBd,IAAuBD,IEgBT,OAAH,sDAOhB,OACE,sBAAK5C,UAAU,cAAf,UACE,+CACA,yBAASA,UAAU,oBAAnB,SACE,mCAAIqC,QAAJ,IAAIA,OAAJ,EAAIA,EAAalC,UAGnB,0BAASH,UAAU,wBAAnB,UACGuC,EAASO,OAAS,EAEf,wBACE1C,KAAK,SACLJ,UAAU,SACVK,QAAS,WACGoC,GAAVD,IAJJ,SAOGA,EAAO,eAAWD,EAASO,OAApB,4BAAgDP,EAASO,OAAzD,eAGT,6CAEJN,GACC,oBAAIxC,UAAU,oBAAd,SACGuC,EAAStC,KAAI,SAAAuB,GAAO,OACnB,qBAAIxB,UAAU,yBAAd,UACE,wBACEI,KAAK,SACLJ,UAAU,oCACVK,QAAS,kBAAMsC,EAAWnB,EAAQlB,KAHpC,eAOA,4BAAIkB,EAAQV,SAR8BU,EAAQlB,YAe5D,kCACE,qBAAKN,UAAU,4BAAf,SACE,cAAC,EAAD,CACEmB,YAAaA,EACbX,OAAQA,aChBLuC,EApDO,WACpB,MAAoCxD,mBAAS,GAA7C,mBAAOyD,EAAP,KAAmBC,EAAnB,KACA,EAAsC1D,mBAAS,GAA/C,mBAAOD,EAAP,KAAoBD,EAApB,KACA,EAA0BE,mBAAiB,IAA3C,mBAAO2D,EAAP,KAAcC,EAAd,KAOA,OALAzD,qBAAU,WJCHC,MAAM,GAAD,OAAIT,EAAJ,WACTU,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UIAxBF,MAAK,SAAAC,GAAQ,OAAIsD,EAAStD,QAC5B,IAGD,sBAAKG,UAAU,MAAf,UACE,wBAAQA,UAAU,cAAlB,SACE,wDAGE,yBACEA,UAAU,qBACVkC,SAAU,SAAAP,GAAK,OAAIsB,GAAetB,EAAMQ,OAAOF,QAFjD,UAIE,wBAAQA,MAAM,IAAd,uBACCiB,EAAMjD,KAAI,SAAAmD,GAAI,OACb,wBACEnB,MAAOmB,EAAK9C,GADd,SAIG8C,EAAKhC,MAFDgC,EAAK9C,eASpB,uBAAMN,UAAU,YAAhB,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CACEZ,OAAQ4D,EACR3D,eAAgBA,EAChBC,YAAaA,MAIA,IAAhBA,GACC,qBAAKU,UAAU,eAAf,SACE,cAAC,EAAD,CAAaQ,OAAQlB,aC/CjC+D,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2a0a595e.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate.academy/students-api';\n","/* eslint-disable @typescript-eslint/no-unused-expressions */\nimport React, { useEffect, useState } from 'react';\nimport { getUserPosts } from '../../api/posts';\nimport './PostsList.scss';\n\ntype Props = {\n  userId: number,\n  setSelectDetId: (value: React.SetStateAction<number>) => void,\n  selectDetId: number\n};\n\nexport const PostsList: React.FC<Props>\n  = ({ userId, setSelectDetId, selectDetId }) => {\n    const [userPosts, setUserPosts] = useState<Post[]>();\n\n    useEffect(() => {\n      getUserPosts(userId)\n        .then(response => setUserPosts(response));\n    }, [userId]);\n\n    return (\n      <div className=\"PostsList\">\n        <h2>Posts:</h2>\n\n        <ul className=\"PostsList__list\" data-cy=\"postDetails\">\n          {userPosts?.map(post => (\n            <li\n              className=\"PostsList__item\"\n              key={post.id}\n            >\n              <div>\n                <b>\n                  {`[User #${post.userId}]:`}\n                </b>\n                {post.title}\n              </div>\n\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => {\n                  selectDetId === post.id\n                    ? setSelectDetId(0)\n                    : setSelectDetId(post.id);\n                }}\n              >\n                { selectDetId === post.id ? 'Close' : 'Open'}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  };\n","import { BASE_URL } from './api';\n\nexport function getUserPosts(userId:number) {\n  return fetch(userId ? `${BASE_URL}/posts?userId=${userId}` : `${BASE_URL}/posts`)\n    .then(response => response.json());\n}\n\nexport function getPostDetails(postId:number) {\n  return fetch(`${BASE_URL}/posts/${postId}`)\n    .then(response => response.json());\n}\n\nexport function getUsers() {\n  return fetch(`${BASE_URL}/users`)\n    .then(response => response.json());\n}\n","import { BASE_URL } from './api';\n\nexport const getPostComments = async (postId:number) => {\n  const responst = await fetch(`${BASE_URL}/comments?postId=${postId}`);\n\n  return responst.json();\n};\n\nexport function deleteComment(commentId:number) {\n  return fetch(`${BASE_URL}/comments/${commentId}`, { method: 'DELETE' });\n}\n\nexport const addComment = async (obj:NewComment) => {\n  await fetch(`${BASE_URL}/comments`,\n    {\n      method: 'POST',\n      body: JSON.stringify(obj),\n      headers: { 'Content-type': 'application/json; charset=UTF-8' },\n    });\n};\n","import React, { useState } from 'react';\nimport { addComment, getPostComments } from '../../api/comments';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  setComments: React.Dispatch<React.SetStateAction<Comment[]>>,\n  postId: number,\n};\n\nexport const NewCommentForm: React.FC<Props>\n  = ({ setComments, postId }) => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [comment, setComment] = useState('');\n\n    const clearInput = () => {\n      setName('');\n      setEmail('');\n      setComment('');\n    };\n\n    const formSubmit = async (event:React.FormEvent) => {\n      event.preventDefault();\n\n      const newComment:NewComment = {\n        name,\n        email,\n        body: comment,\n        postId,\n      };\n\n      await addComment(newComment);\n      const result = await getPostComments(postId);\n\n      setComments(result);\n\n      clearInput();\n    };\n\n    return (\n      <form\n        className=\"NewCommentForm\"\n        onSubmit={formSubmit}\n      >\n        <div className=\"form-field\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Your name\"\n            className=\"NewCommentForm__input\"\n            value={name}\n            onChange={(event) => {\n              setName(event.target.value);\n            }}\n          />\n        </div>\n\n        <div className=\"form-field\">\n          <input\n            type=\"text\"\n            name=\"email\"\n            placeholder=\"Your email\"\n            className=\"NewCommentForm__input\"\n            value={email}\n            onChange={(event) => {\n              setEmail(event.target.value);\n            }}\n          />\n        </div>\n\n        <div className=\"form-field\">\n          <textarea\n            name=\"body\"\n            placeholder=\"Type comment here\"\n            className=\"NewCommentForm__input\"\n            value={comment}\n            onChange={(event) => {\n              setComment(event.target.value);\n            }}\n          />\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"NewCommentForm__submit-button button\"\n        >\n          Add a comment\n        </button>\n      </form>\n    );\n  };\n","/* eslint-disable @typescript-eslint/no-unused-expressions */\nimport React, { useEffect, useState } from 'react';\nimport { deleteComment, getPostComments } from '../../api/comments';\nimport { getPostDetails } from '../../api/posts';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ntype Props = {\n  postId: number\n};\n\nexport const PostDetails: React.FC<Props> = ({ postId }) => {\n  const [postDetails, setPostDetails] = useState<Post>();\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [visible, setVisible] = useState(true);\n\n  useEffect(() => {\n    getPostDetails(postId)\n      .then(response => setPostDetails(response));\n\n    getPostComments(postId)\n      .then(response => setComments(response));\n  }, [postId]);\n\n  const delComment = async (id: number) => {\n    await deleteComment(id);\n    const newComments = await getPostComments(postId);\n\n    setComments(newComments);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n      <section className=\"PostDetails__post\">\n        <p>{postDetails?.title}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        {comments.length > 0\n          ? (\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => {\n                visible ? setVisible(false) : setVisible(true);\n              }}\n            >\n              {visible ? `Hide ${comments.length} comments` : `Show ${comments.length} comments`}\n            </button>\n          )\n          : (<h3>No comments</h3>)}\n\n        {visible && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li className=\"PostDetails__list-item\" key={comment.id}>\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => delComment(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            setComments={setComments}\n            postId={postId}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUsers } from './api/posts';\n\nconst App: React.FC = () => {\n  const [selectUser, setSelectUser] = useState(0);\n  const [selectDetId, setSelectDetId] = useState(0);\n  const [users, setUsers] = useState<User[]>([]);\n\n  useEffect(() => {\n    getUsers()\n      .then(response => setUsers(response));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={event => setSelectUser(+event.target.value)}\n          >\n            <option value=\"0\">All users</option>\n            {users.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userId={selectUser}\n            setSelectDetId={setSelectDetId}\n            selectDetId={selectDetId}\n          />\n        </div>\n\n        {selectDetId !== 0 && (\n          <div className=\"App__content\">\n            <PostDetails postId={selectDetId} />\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}